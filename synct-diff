#!/bin/sh
# Shows diffs for conflicts and provides options for resolving them
# Also auto-merges jrnl conflicts if JOURNAL is set
# Args: Paths to check, -q to show stats rather than diff
# Depends: synct dif
# OptDepends: emacs wiked-diff
# TODO use diff --from-file / rmlint for dup detection
name="${0%-*}"
stats() {
  stat --format '%.10y %s %n - birth %.10w' "$@" | numfmt --field=2 --to=iec-i --padding=6 --suffix=B
}
test "$1" = "-q" && quick=-q && shift
if test "$#" -gt 0 && test -f "$1"
  then
    for arg; do
      orig="$(echo "$arg" | $name-unarchive)"
      test "$orig" = "$arg" &&
        echo "Unable to determine original filename for '$arg'" >&2 &&
        continue
      if test -n "$quick"
      then stats "$orig" "$arg"
      else
        if diff "$orig" "$arg" >/dev/null
        then echo "Deleting '$arg' as it is equal to '$orig'" >&2
          reply=d
        else
          ( stats "$orig" "$arg"
              if which wiked-diff >&2 >/dev/null
              then wiked-diff "$orig" "$arg"
              else
                highlight "Additions from $arg"
                # TODO use sed to trim context
                # TODO check if "added" line is contained in removed line
                diff "$orig" "$arg" --minimal --old-group-format="" --changed-group-format="%c'\033'[31m%<%c'\033'[32m%>%c'\033'[0m" | sed -n "/^$(printf "\033")/,\$p"
                dif "$orig" "$arg"
              fi
          ) | less --RAW-CONTROL-CHARS --quit-on-intr --quit-if-one-screen
          test "$?" -eq "2" && exit 1
          echo "y|r to restore, n|d to delete, c to copy additions to clipboard, m to git-merge, e to ediff"
          read reply
        fi
        case "$reply" in
          (y|r) $name-restore "$arg";;
          (n|d) mv -v "$arg" /tmp;;
          (D) rm -v "$arg";;
          (c) diff --old-line-format="" --unchanged-line-format="" "$orig" "$arg" | xclip -selection clipboard && mv -v "$arg" "/tmp/";;
          (m) touch /tmp/empty && git merge-file "$orig" /tmp/empty "$arg" && "${EDITOR:-vi}" "$orig" && rm "$arg";;
          (e) emacsclient -a "" --tty --eval "(ediff-files \"$orig\" \"$arg\")"
        esac
        printf "%$(tput cols)s\n" | sed 's| |Â·|g'
      fi
    done
  else
    test -d "$JOURNAL" && find "$JOURNAL" -name '*sync-conflict*.txt' -exec sh -c 'basename {} | cut -d. -f1 | xargs -i% jrnl % --import --file {}' \; -delete
    find "$@" -path "**/.git/**/index.sync-conflict*" -delete
    find "$@" -name '.stfolder' -prune -o -type f \( -name '*sync-conflict*' -o -name "*.pacnew" -o -name "#*#" -o -name "*.bak" \) -exec "$0" $quick '{}' \;
fi
