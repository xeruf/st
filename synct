#!/bin/sh -e
# Query local syncthing REST API
# Numeric argument is treated as depth or page
# String as path/filename
name="$(basename $0)"
endpoints="browse|completion|file|ignores|need|status"
test $# -eq 0 && echo "Usage:
  $name <command> [args...]
  $name <rest-endpoint>
    The endpoint consists of anything after /rest/
    The following endpoints have convenience handling: $endpoints
    For example, '$name browse data/music 2' browses path music in folder data with depth two
    Check out the api: https://docs.syncthing.net/dev/rest.html" && exit 1
defaultfolder=data
if subscript="$(test -e "$0-$1" && echo "$0-$1" || which "$name-$1" 2>/dev/null)"
then shift && "$subscript" "$@"
else
  apikey=$(grep apikey ${XDG_CONFIG_HOME:-$HOME/.config}/syncthing/config.xml | sed 's|^.*>\(.*\)<.*$|\1|')
  query="$1"
  shift
  case "$query" in
    (browse|completion|file|ignores|need|status)
      test $# -eq 0 && folderpath=$(synct config/folders | jq --raw-output --arg pattern "$PWD" '.[] as {$id, $path} | $pattern | select(startswith($path)) | $id + .[$path | length:]')
      while test $# -gt 0
      do case "$1" in ([0-9]) depth=$1;; (*) folderpath="$1";; esac
        shift
      done
      query=$(echo "db/$query?folder=$(expr "${folderpath%%/*}" \& "$folderpath" \| "$defaultfolder")
        $(expr levels \& "$query" = "browse" \| page)=${depth:-1}
        $(case "$folderpath" in (*/*) echo "$(expr "prefix" \& "$query" = "browse" \| "$query")=${folderpath#*/}";; esac)" |
          tr -d ' ' | paste -s -d'&');;
  esac
  curl --silent -H 'Content-Type: application/json' -H "X-API-Key: $apikey" "http://localhost:8384/rest/$query" "$@" | bat --style=numbers -l json
fi
